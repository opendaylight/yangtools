{
  "comments": [
    {
      "key": {
        "uuid": "fa82b9bf_00251baa",
        "filename": "code-generator/binding-generator-impl/src/main/java/org/opendaylight/yangtools/sal/binding/generator/impl/TransformerGenerator.xtend",
        "patchSetId": 6
      },
      "lineNbr": 425,
      "author": {
        "id": 649
      },
      "writtenOn": "2014-06-09T09:11:10Z",
      "side": 1,
      "message": "trailing whitespace",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_209dbfbc",
        "filename": "code-generator/binding-generator-impl/src/main/java/org/opendaylight/yangtools/sal/binding/generator/util/JavassistUtils.java",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 649
      },
      "writtenOn": "2014-06-09T09:11:10Z",
      "side": 1,
      "message": "unused imports?",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_e0a6f70f",
        "filename": "code-generator/binding-generator-impl/src/main/java/org/opendaylight/yangtools/sal/binding/generator/util/SourceCodeGenerator.java",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 649
      },
      "writtenOn": "2014-06-09T09:11:10Z",
      "side": 1,
      "message": "I think it is conceivable to have differing implementations... can we have an interface/implementation?",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_9303c741",
        "filename": "code-generator/binding-generator-impl/src/main/java/org/opendaylight/yangtools/sal/binding/generator/util/SourceCodeGenerator.java",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-06-09T20:22:59Z",
      "side": 1,
      "message": "This is basically a simple helper class. I suppose there could be different impls (although isn\u0027t that the case with everything). I can make an interface although I think it\u0027s probably overkill.",
      "parentUuid": "fa82b9bf_e0a6f70f",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_0d91cb46",
        "filename": "code-generator/binding-generator-impl/src/main/java/org/opendaylight/yangtools/sal/binding/generator/util/SourceCodeGenerator.java",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 649
      },
      "writtenOn": "2014-06-13T12:00:47Z",
      "side": 1,
      "message": "So that\u0027s the thing. If you extract into an interface, you can have two implementations:\n- one which does nothing\n- one which outputs the source code\n\nThen whoever is invking the constructor below, can look at the system properties and instantiate one of the two implementations -- which will result in less checks is the \u0027generateSource\u0027 value is implied by the implementation",
      "parentUuid": "fa82b9bf_9303c741",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_180a6bd2",
        "filename": "code-generator/binding-generator-impl/src/main/java/org/opendaylight/yangtools/sal/binding/generator/util/SourceCodeGenerator.java",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-06-13T23:52:42Z",
      "side": 1,
      "message": "Yeah that\u0027s another way to do it.   I can change it although I really don\u0027t think this needs to be that fancy - again it\u0027s just a simple helper class to aid troubleshooting.",
      "parentUuid": "fa82b9bf_0d91cb46",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_40524314",
        "filename": "code-generator/binding-generator-impl/src/main/java/org/opendaylight/yangtools/sal/binding/generator/util/SourceCodeGenerator.java",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 649
      },
      "writtenOn": "2014-06-09T09:11:10Z",
      "side": 1,
      "message": "the \u0027generate\u0027 source bit should be in the caller of the contructor -- e.g. elide constructing if not enabled.\n\nthe target directotry should be an argument, again determined by the caller -- multiple different instances should be possible\n\nfinally, the magic strings need to be public constants with appropriate javadocs",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_73f88349",
        "filename": "code-generator/binding-generator-impl/src/main/java/org/opendaylight/yangtools/sal/binding/generator/util/SourceCodeGenerator.java",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-06-09T20:22:59Z",
      "side": 1,
      "message": "Yeah I can have the caller avoid constructing if not enabled and pass in the target dir. Again I was trying  to keep it simple and not over-engineer this. If we avoid constructing then I have to check if not null all over the place. I think he overhead of constructing an instance is negligible compared to the rest of processing to generate a codec classes.\n\nHowever, if we\u0027re going to have an interface and elide construction if not enabled, then we may as well go all out and create a factory class to create SourceCodeGenerator instances. If not enabled then return a static impl that does nothing.",
      "parentUuid": "fa82b9bf_40524314",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_20761fa5",
        "filename": "code-generator/binding-generator-impl/src/main/java/org/opendaylight/yangtools/sal/binding/generator/util/SourceCodeGenerator.java",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 649
      },
      "writtenOn": "2014-06-09T09:11:10Z",
      "side": 1,
      "message": "I think the return is guaranteed to be non-null",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_4079e391",
        "filename": "code-generator/binding-generator-impl/src/main/java/org/opendaylight/yangtools/sal/binding/generator/util/SourceCodeGenerator.java",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 649
      },
      "writtenOn": "2014-06-09T09:11:10Z",
      "side": 1,
      "message": "curly braces are mandatory even for single-line conditional body",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_e0583734",
        "filename": "code-generator/binding-generator-impl/src/main/java/org/opendaylight/yangtools/sal/binding/generator/util/SourceCodeGenerator.java",
        "patchSetId": 6
      },
      "lineNbr": 124,
      "author": {
        "id": 649
      },
      "writtenOn": "2014-06-09T09:11:10Z",
      "side": 1,
      "message": "curly brace and catch should be on the same line",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_805e0b11",
        "filename": "code-generator/binding-generator-impl/src/main/java/org/opendaylight/yangtools/sal/binding/generator/util/SourceCodeGenerator.java",
        "patchSetId": 6
      },
      "lineNbr": 137,
      "author": {
        "id": 649
      },
      "writtenOn": "2014-06-09T09:11:10Z",
      "side": 1,
      "message": "do not use string concat in logging, but rather proper format string",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_603507d9",
        "filename": "code-generator/maven-sal-api-gen-plugin/src/main/java/org/opendaylight/yangtools/yang/unified/doc/generator/GeneratorImpl.xtend",
        "patchSetId": 6
      },
      "lineNbr": 652,
      "author": {
        "id": 649
      },
      "writtenOn": "2014-06-09T09:11:10Z",
      "side": 1,
      "message": "This looks like an unrelated change",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_d3b70f85",
        "filename": "code-generator/maven-sal-api-gen-plugin/src/main/java/org/opendaylight/yangtools/yang/unified/doc/generator/GeneratorImpl.xtend",
        "patchSetId": 6
      },
      "lineNbr": 652,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-06-09T20:22:59Z",
      "side": 1,
      "message": "It is. Fixes compile error in eclipse.",
      "parentUuid": "fa82b9bf_603507d9",
      "revId": "d236bede301baa1e0b1d5ca94c6292929053f6fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}