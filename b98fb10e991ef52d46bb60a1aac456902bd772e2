{
  "comments": [
    {
      "key": {
        "uuid": "fa57193c_c22bcbe9",
        "filename": "yang/yang-model-api/src/main/java/org/opendaylight/yangtools/yang/model/repo/api/SchemaContextFactory.java",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-05-04T12:17:08Z",
      "side": 1,
      "message": "give this method a default implementation, which invokes the richer variant with a Predicate which just returns true.",
      "range": {
        "startLine": 35,
        "startChar": 60,
        "endLine": 35,
        "endChar": 79
      },
      "revId": "b98fb10e991ef52d46bb60a1aac456902bd772e2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa57193c_62ef5fb1",
        "filename": "yang/yang-model-api/src/main/java/org/opendaylight/yangtools/yang/model/repo/api/SchemaContextFactory.java",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-05-04T12:17:08Z",
      "side": 1,
      "message": "This requires a magic Set constant, which is not really nice. How about passing a java.util.function.Predicate\u003cQName\u003e here, which would indicate whether a feature should be supported?\n\nThe parser would then perform callouts for each feature it encounters.",
      "range": {
        "startLine": 50,
        "startChar": 67,
        "endLine": 50,
        "endChar": 95
      },
      "revId": "b98fb10e991ef52d46bb60a1aac456902bd772e2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}