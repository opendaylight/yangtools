{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8da730f8_d66c6ea0",
        "filename": "codec/yang-data-codec-gson/src/main/java/org/opendaylight/yangtools/yang/data/codec/gson/JSONCodecFactory.java",
        "patchSetId": 15
      },
      "lineNbr": 120,
      "author": {
        "id": 649
      },
      "writtenOn": "2022-12-04T10:50:47Z",
      "side": 1,
      "message": "this is not appropriate -- see RFC7951.",
      "range": {
        "startLine": 120,
        "startChar": 40,
        "endLine": 120,
        "endChar": 45
      },
      "revId": "731ca24b1efb937afbf95197499ee3982ef85fb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f5f260a_07cebe42",
        "filename": "data/yang-data-impl/src/main/java/org/opendaylight/yangtools/yang/data/impl/codec/BitsHexStringCodec.java",
        "patchSetId": 15
      },
      "lineNbr": 43,
      "author": {
        "id": 8324
      },
      "writtenOn": "2022-12-02T08:35:14Z",
      "side": 1,
      "message": "Whats the reason behind using AttomicInteger here, if the Bit object contains the position already.",
      "revId": "731ca24b1efb937afbf95197499ee3982ef85fb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "905ed9af_e042cc5d",
        "filename": "data/yang-data-impl/src/main/java/org/opendaylight/yangtools/yang/data/impl/codec/BitsHexStringCodec.java",
        "patchSetId": 15
      },
      "lineNbr": 43,
      "author": {
        "id": 8894
      },
      "writtenOn": "2022-12-02T10:23:09Z",
      "side": 1,
      "message": "https://www.rfc-editor.org/rfc/rfc7950#section-9.7.4.2\nthe position value can be up to 4_294_967_295\nit transfers into max storage value up to ~ 512 Mb,\nrecalculating bit positions from expected to \nactual helps saving space (no wasted bits)",
      "parentUuid": "4f5f260a_07cebe42",
      "revId": "731ca24b1efb937afbf95197499ee3982ef85fb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}