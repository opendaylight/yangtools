{
  "comments": [
    {
      "key": {
        "uuid": "1aa4ed85_fd721de2",
        "filename": "yang/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/spi/source/SourceException.java",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-01-05T06:59:09Z",
      "side": 1,
      "message": "missing a space here",
      "range": {
        "startLine": 30,
        "startChar": 44,
        "endLine": 30,
        "endChar": 50
      },
      "revId": "49df09aa23282e7c28199643e95019c53962958a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_5ec6cc4a",
        "filename": "yang/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/spi/source/SourceException.java",
        "patchSetId": 8
      },
      "lineNbr": 38,
      "author": {
        "id": 3635
      },
      "writtenOn": "2016-01-04T15:29:42Z",
      "side": 1,
      "message": "Should be final",
      "range": {
        "startLine": 38,
        "startChar": 40,
        "endLine": 38,
        "endChar": 63
      },
      "revId": "49df09aa23282e7c28199643e95019c53962958a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_fec45841",
        "filename": "yang/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/spi/source/SourceException.java",
        "patchSetId": 8
      },
      "lineNbr": 38,
      "author": {
        "id": 3635
      },
      "writtenOn": "2016-01-04T15:29:42Z",
      "side": 1,
      "message": "Should be final.",
      "range": {
        "startLine": 38,
        "startChar": 65,
        "endLine": 38,
        "endChar": 105
      },
      "revId": "49df09aa23282e7c28199643e95019c53962958a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_9d81a991",
        "filename": "yang/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/stmt/reactor/SourceSpecificContext.java",
        "patchSetId": 8
      },
      "lineNbr": 66,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-01-05T06:59:09Z",
      "side": 1,
      "message": "keep these one one line each, they are missing documentation",
      "revId": "49df09aa23282e7c28199643e95019c53962958a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_bd7ca5b6",
        "filename": "yang/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/stmt/reactor/SourceSpecificContext.java",
        "patchSetId": 8
      },
      "lineNbr": 152,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-01-05T06:59:09Z",
      "side": 1,
      "message": "move the entire string to new line to prevent concat",
      "revId": "49df09aa23282e7c28199643e95019c53962958a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_5ef48c86",
        "filename": "yang/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/stmt/reactor/StatementContextBase.java",
        "patchSetId": 8
      },
      "lineNbr": 171,
      "author": {
        "id": 3635
      },
      "writtenOn": "2016-01-04T15:29:42Z",
      "side": 1,
      "message": "Not familiar enough with this code to tell;  could  \"original.getStatementSourceReference()\" return null?  I see no syntax guards against it in ContextBuilder, but then again I don\u0027t know if this is semantically impossible.",
      "range": {
        "startLine": 171,
        "startChar": 50,
        "endLine": 171,
        "endChar": 79
      },
      "revId": "49df09aa23282e7c28199643e95019c53962958a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_26e3c106",
        "filename": "yang/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/stmt/reactor/StatementContextBase.java",
        "patchSetId": 8
      },
      "lineNbr": 171,
      "author": {
        "id": 4561
      },
      "writtenOn": "2016-01-07T13:12:05Z",
      "side": 1,
      "message": "StatementSourceReference object cannot be null.",
      "parentUuid": "1aa4ed85_5ef48c86",
      "range": {
        "startLine": 171,
        "startChar": 50,
        "endLine": 171,
        "endChar": 79
      },
      "revId": "49df09aa23282e7c28199643e95019c53962958a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_1d6e1902",
        "filename": "yang/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/stmt/reactor/StatementContextBase.java",
        "patchSetId": 8
      },
      "lineNbr": 172,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-01-04T23:24:52Z",
      "side": 1,
      "message": "Preconditions take a format string here. Do not use string concatenation, but String.format()-like notation.",
      "revId": "49df09aa23282e7c28199643e95019c53962958a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_5d4b3187",
        "filename": "yang/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/stmt/rfc6020/FractionDigitsStatementImpl.java",
        "patchSetId": 8
      },
      "lineNbr": 66,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-01-05T06:59:09Z",
      "side": 1,
      "message": "trailing whitespace",
      "revId": "49df09aa23282e7c28199643e95019c53962958a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_fe49b8d0",
        "filename": "yang/yang-parser-impl/src/test/java/org/opendaylight/yangtools/yang/stmt/retest/TestUtils.java",
        "patchSetId": 8
      },
      "lineNbr": 272,
      "author": {
        "id": 3635
      },
      "writtenOn": "2016-01-04T15:29:42Z",
      "side": 1,
      "message": "Is there a reason that this uses indexing rather than an iterator?",
      "range": {
        "startLine": 270,
        "startChar": 8,
        "endLine": 272,
        "endChar": 9
      },
      "revId": "49df09aa23282e7c28199643e95019c53962958a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}