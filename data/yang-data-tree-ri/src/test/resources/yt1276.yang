module foo {
  namespace foo;
  prefix foo;

  container foo {
    presence blah;
  }

  augment /foo {
    leaf bar {
      type string;
      mandatory true;
    }
  }

  container bar {
    presence blah;

    choice baz {
      case xyzzy-case {
        leaf xyzzy-leaf {
          type string;
          mandatory true;
        }
      }
    }
  }

  augment /bar/baz/xyzzy-case {
    leaf xyzzy-augment {
      type string;
      mandatory true;
    }

    container xyzzy-augment-container {
      container xyzzy-augment-container-inner {
        leaf xyzzy-augment-container-leaf {
          type string;
          mandatory true;
        }
      }
    }
  }

  augment /bar/baz {
    case augmented-case {
      leaf augmented-case-mandatory {
        type string;
        mandatory true;
      }

      leaf augmented-case-non-mandatory {
        type string;
      }
    }
  }

  augment /bar/baz {
    case case-nested-choice {
      choice nested-baz {
        case nested-xyz-case {
          leaf nested-xyz-mandatory {
            type string;
            mandatory true;
          }

          leaf nested-xyz-non-mandatory {
            type string;
          }
        }
      }
    }
  }
}

