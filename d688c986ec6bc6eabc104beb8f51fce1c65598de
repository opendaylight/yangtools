{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "704fad6b_de756a82",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T16:21:03Z",
      "side": 1,
      "message": "please keep body lines under 80 columns",
      "range": {
        "startLine": 9,
        "startChar": 1,
        "endLine": 9,
        "endChar": 117
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4aedbea8_bd081c2c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-05T13:25:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "704fad6b_de756a82",
      "range": {
        "startLine": 9,
        "startChar": 1,
        "endLine": 9,
        "endChar": 117
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8e06f27_e78c3f5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 9172
      },
      "writtenOn": "2023-03-31T18:06:25Z",
      "side": 1,
      "message": "Ammended according to the most notable comments, rest of them rendered irrelevant by the changes.",
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "519c0c10_dea8265a",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T16:21:03Z",
      "side": 1,
      "message": "okay, so this wants to be a https://en.wikipedia.org/wiki/Builder_pattern\n\nalso, this is private implementation detail, hence the class should not be public",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 32
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03979172_5b5bfeb4",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T18:13:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "519c0c10_dea8265a",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 32
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47918818_9d942287",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T16:21:03Z",
      "side": 1,
      "message": "Map.containsKey() followed by Map.get() when the map cannot contain nulls (which is the case most of the times).\n\nJust perform a Map.get() and check returned value for null (which means containsKey() \u003d\u003d false)",
      "range": {
        "startLine": 45,
        "startChar": 45,
        "endLine": 45,
        "endChar": 58
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dc76eb2_6af82f59",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T18:13:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47918818_9d942287",
      "range": {
        "startLine": 45,
        "startChar": 45,
        "endLine": 45,
        "endChar": 58
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f0ec387_52db42b0",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T16:21:03Z",
      "side": 1,
      "message": "Also there is an interesting invariant, which we should enforce:\n\nfor Entry\u003cQNameModule, Set\u003cQName\u003e\u003e all members of the set should have the same QNameModule (which is implied by semantics for feature statement).\n\nThat in turn means we can have a simple Map\u003cQNameModule, Set\u003cString\u003e\u003e where the strings are QName.getLocalName() -- speeding up lookups",
      "range": {
        "startLine": 47,
        "startChar": 28,
        "endLine": 47,
        "endChar": 43
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e33a352_451ff1ba",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T18:13:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f0ec387_52db42b0",
      "range": {
        "startLine": 47,
        "startChar": 28,
        "endLine": 47,
        "endChar": 43
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8aeb473f_2a7dc257",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T16:21:03Z",
      "side": 1,
      "message": "be sure to read javadocs: this should either be ClassCastException, or, preferrably just a \u0027return false\u0027",
      "range": {
        "startLine": 55,
        "startChar": 18,
        "endLine": 55,
        "endChar": 42
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6da9ae4a_9e1fabba",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T18:13:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8aeb473f_2a7dc257",
      "range": {
        "startLine": 55,
        "startChar": 18,
        "endLine": 55,
        "endChar": 42
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c9f3976_9d011ae5",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T16:21:03Z",
      "side": 1,
      "message": "this is not accurate, as hashCode() can return same values for non-equal maps.\n\nthis implementation would only be fair if you can guarantee hashCode() is an https://en.wikipedia.org/wiki/Injective_function",
      "range": {
        "startLine": 80,
        "startChar": 19,
        "endLine": 80,
        "endChar": 49
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ed48171_b2e42b9e",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T18:13:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c9f3976_9d011ae5",
      "range": {
        "startLine": 80,
        "startChar": 19,
        "endLine": 80,
        "endChar": 49
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b477dc56_aef1566f",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T16:21:03Z",
      "side": 1,
      "message": "this really is a build() operation",
      "range": {
        "startLine": 90,
        "startChar": 37,
        "endLine": 90,
        "endChar": 53
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bd4198a_425735fa",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T18:13:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b477dc56_aef1566f",
      "range": {
        "startLine": 90,
        "startChar": 37,
        "endLine": 90,
        "endChar": 53
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d92c6a7_b47e6333",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T16:21:03Z",
      "side": 1,
      "message": "this is the final product -- it should be completely independent of the outer class",
      "range": {
        "startLine": 94,
        "startChar": 23,
        "endLine": 94,
        "endChar": 42
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d90f4284_c8b32d43",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T18:13:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d92c6a7_b47e6333",
      "range": {
        "startLine": 94,
        "startChar": 23,
        "endLine": 94,
        "endChar": 42
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "301154a5_92f177db",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T16:21:03Z",
      "side": 1,
      "message": "Map.keySet() iteration followed by Map.get(key) -- always use Map.entrySet() in these circumstances",
      "range": {
        "startLine": 98,
        "startChar": 38,
        "endLine": 98,
        "endChar": 62
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "429e3ff4_783c91d2",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T18:13:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "301154a5_92f177db",
      "range": {
        "startLine": 98,
        "startChar": 38,
        "endLine": 98,
        "endChar": 62
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a641639b_0b5396fb",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T16:21:03Z",
      "side": 1,
      "message": "actually this is a missed opportunity: for each contains() invocation of contains() we have to iterate through all the sets.\n\nWe really should have a Map\u003cQNameModule, Set\u003cQName\u003e\u003e, which makes contains() implementation nigh trivial.",
      "range": {
        "startLine": 101,
        "startChar": 16,
        "endLine": 101,
        "endChar": 70
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e201179d_2ce3ec41",
        "filename": "parser/yang-parser-impl/src/main/java/org/opendaylight/yangtools/yang/parser/repo/SupportedFeatureSet.java",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T18:13:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a641639b_0b5396fb",
      "range": {
        "startLine": 101,
        "startChar": 16,
        "endLine": 101,
        "endChar": 70
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1a30aa6_a853d659",
        "filename": "yang/yang-repo-api/src/main/java/org/opendaylight/yangtools/yang/model/repo/api/ResolverSupportedFeatures.java",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T16:21:03Z",
      "side": 1,
      "message": "pretty spot on, but we really want this to be a abstract class which enforces the contract of Set (or our lack thereof).",
      "range": {
        "startLine": 14,
        "startChar": 17,
        "endLine": 14,
        "endChar": 42
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ec5141c_9138062e",
        "filename": "yang/yang-repo-api/src/main/java/org/opendaylight/yangtools/yang/model/repo/api/ResolverSupportedFeatures.java",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T18:13:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1a30aa6_a853d659",
      "range": {
        "startLine": 14,
        "startChar": 17,
        "endLine": 14,
        "endChar": 42
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fae2516_7934768d",
        "filename": "yang/yang-repo-api/src/main/java/org/opendaylight/yangtools/yang/model/repo/api/SchemaContextFactoryConfiguration.java",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T16:21:03Z",
      "side": 1,
      "message": "we want to be lenient here: just take care of the null/ResolverSupportFeatures part and do ImmutableSet.copyOf() for others\n\nwe also want to do that in the builder rather than here -- hence any failures will occur during setSupportedFeatures() and not during build()",
      "range": {
        "startLine": 51,
        "startChar": 41,
        "endLine": 51,
        "endChar": 85
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e23c10a_f84317d7",
        "filename": "yang/yang-repo-api/src/main/java/org/opendaylight/yangtools/yang/model/repo/api/SchemaContextFactoryConfiguration.java",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-04-04T18:13:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fae2516_7934768d",
      "range": {
        "startLine": 51,
        "startChar": 41,
        "endLine": 51,
        "endChar": 85
      },
      "revId": "d688c986ec6bc6eabc104beb8f51fce1c65598de",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}