{
  "comments": [
    {
      "key": {
        "uuid": "fa82b9bf_316297ae",
        "filename": "common/util/src/main/java/org/opendaylight/yangtools/util/ReadOnlyTrieMap.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-08-01T13:11:27Z",
      "side": 1,
      "message": "Using a local var isn\u0027t actually necessary here. Just making \u0027readOnly\u0027 volatile is enough to make the DCL safe. See my additional comments in the bug. But it\u0027s OK either way although looks cleaner w/o the local.",
      "revId": "4a392918c0be09d183ce84c53e8e0d1d1752a7c7",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_310937de",
        "filename": "common/util/src/main/java/org/opendaylight/yangtools/util/ReadOnlyTrieMap.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-08-01T13:24:49Z",
      "side": 1,
      "message": "On a side note, using a local var as above still wouldn\u0027t have made this safe prior to 1.5 b/c non-volatile writes in the ctor could still be re-ordered after line 52. There was no way to make DCL safe prior to 1.5.",
      "parentUuid": "fa82b9bf_316297ae",
      "revId": "4a392918c0be09d183ce84c53e8e0d1d1752a7c7",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_51bddbb5",
        "filename": "common/util/src/main/java/org/opendaylight/yangtools/util/ReadOnlyTrieMap.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 649
      },
      "writtenOn": "2014-08-01T15:15:37Z",
      "side": 1,
      "message": "Well, it\u0027s not necessary, but I think it actually it is an optimization. note that we use the value twice: once in the if() statement and second time for return. based on https://stackoverflow.com/questions/4633866/is-volatile-expensive, that would incur two memory loads. Since the local var is non-volatile, I assume it prevents the second load from occuring.",
      "parentUuid": "fa82b9bf_316297ae",
      "revId": "4a392918c0be09d183ce84c53e8e0d1d1752a7c7",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_d1c80b57",
        "filename": "common/util/src/main/java/org/opendaylight/yangtools/util/ReadOnlyTrieMap.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 649
      },
      "writtenOn": "2014-08-01T15:15:37Z",
      "side": 1,
      "message": "Yeah, but the class uses generics, so it won\u0027t ever see \u003c1.5 world :)",
      "parentUuid": "fa82b9bf_310937de",
      "revId": "4a392918c0be09d183ce84c53e8e0d1d1752a7c7",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_31085791",
        "filename": "common/util/src/main/java/org/opendaylight/yangtools/util/ReadOnlyTrieMap.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-08-01T15:38:45Z",
      "side": 1,
      "message": "Yeah - good point - it saves a volatile read at the end. Volatile reads are definitely not as cheap as non-volatile, as it incurs a memory barrier, but cheaper than synchronized.",
      "parentUuid": "fa82b9bf_51bddbb5",
      "revId": "4a392918c0be09d183ce84c53e8e0d1d1752a7c7",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_11eaf3ab",
        "filename": "common/util/src/main/java/org/opendaylight/yangtools/util/ReadOnlyTrieMap.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-08-01T15:38:45Z",
      "side": 1,
      "message": "Yeah I know - pre-1.5 days are gone forever (thank god). I was referring to the Brian Goetz article and why even volatile wasn\u0027t safe prior to 1.5",
      "parentUuid": "fa82b9bf_d1c80b57",
      "revId": "4a392918c0be09d183ce84c53e8e0d1d1752a7c7",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}